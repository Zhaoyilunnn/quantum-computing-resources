import qiskit.qasm3

qasm = """
OPENQASM 3.0;
include "stdgates.inc";
gate rzx(p0) _gate_q_0, _gate_q_1 {
  h _gate_q_1;
  cx _gate_q_0, _gate_q_1;
  rz(p0) _gate_q_1;
  cx _gate_q_0, _gate_q_1;
  h _gate_q_1;
}
gate ecr _gate_q_0, _gate_q_1 {
  rzx(pi/4) _gate_q_0, _gate_q_1;
  x _gate_q_0;
  rzx(-pi/4) _gate_q_0, _gate_q_1;
}
bit[64] c;
bit[64] meas;
delay[6dt] $3;
x $3;
rz(pi/2) $4;
sx $4;
rz(pi/2) $4;
rz(pi/2) $8;
sx $8;
rz(pi/2) $8;
rz(pi/2) $12;
sx $12;
rz(pi/2) $12;
rz(pi/2) $13;
sx $13;
rz(pi/2) $13;
delay[16dt] $14;
x $14;
rz(pi/2) $16;
sx $16;
rz(pi/2) $16;
rz(pi/2) $20;
sx $20;
rz(pi/2) $20;
rz(pi/2) $24;
sx $24;
rz(pi/2) $24;
rz(pi/2) $32;
sx $32;
rz(pi/2) $32;
delay[6dt] $33;
x $33;
delay[12dt] $34;
x $34;
delay[6dt] $36;
x $36;
sx $39;
rz(pi/2) $40;
sx $40;
rz(pi/2) $40;
delay[18dt] $41;
x $41;
rz(pi/2) $44;
sx $44;
rz(pi/2) $44;
rz(pi/2) $45;
sx $45;
rz(pi/2) $45;
rz(pi/2) $46;
sx $46;
rz(pi/2) $46;
delay[10dt] $49;
x $49;
rz(pi/2) $53;
sx $53;
rz(pi/2) $53;
rz(-pi/2) $54;
sx $54;
delay[4dt] $56;
x $56;
rz(pi/2) $58;
sx $58;
rz(pi/2) $58;
delay[18dt] $59;
x $59;
sx $60;
rz(pi/2) $61;
sx $61;
rz(pi/2) $61;
rz(pi/2) $62;
sx $62;
rz(pi/2) $62;
delay[4dt] $63;
x $63;
delay[6dt] $64;
x $64;
delay[10dt] $65;
x $65;
rz(pi/2) $66;
sx $66;
rz(pi/2) $66;
delay[6dt] $67;
x $67;
delay[6dt] $68;
x $68;
rz(pi/2) $71;
sx $71;
rz(pi/2) $71;
rz(pi/2) $72;
sx $72;
rz(pi/2) $72;
delay[4dt] $73;
x $73;
delay[4dt] $75;
x $75;
delay[10dt] $76;
x $76;
delay[14dt] $77;
x $77;
rz(pi/2) $78;
sx $78;
rz(pi/2) $78;
rz(pi/2) $79;
sx $79;
rz(pi/2) $79;
delay[12dt] $80;
x $80;
sx $81;
delay[2dt] $82;
x $82;
rz(pi/2) $83;
sx $83;
rz(pi/2) $83;
rz(pi/2) $84;
sx $84;
rz(pi/2) $84;
rz(pi/2) $85;
sx $85;
rz(pi/2) $85;
rz(pi/2) $86;
sx $86;
rz(pi/2) $86;
sx $87;
rz(pi/2) $90;
sx $90;
rz(pi/2) $90;
rz(pi/2) $91;
sx $91;
rz(pi/2) $91;
delay[2dt] $92;
x $92;
delay[14dt] $93;
x $93;
delay[6dt] $94;
x $94;
delay[14dt] $96;
x $96;
delay[10dt] $97;
x $97;
sx $98;
delay[18dt] $99;
x $99;
delay[16dt] $100;
x $100;
rz(-pi/2) $101;
sx $101;
rz(pi/2) $102;
sx $102;
rz(pi/2) $102;
rz(pi/2) $105;
sx $105;
rz(pi/2) $105;
delay[6dt] $110;
x $110;
delay[4dt] $116;
x $116;
rz(pi/2) $117;
sx $117;
rz(pi/2) $117;
delay[14dt] $118;
x $118;
rz(pi/2) $121;
sx $121;
rz(pi/2) $121;
delay[10dt] $124;
x $124;
rz(pi/2) $125;
sx $125;
rz(pi/2) $125;
delay[12dt] $126;
x $126;
c[0] = measure $100;
if (!c[0]) {
  rz(pi) $78;
}
rz(-pi) $78;
sx $78;
rz(-pi) $78;
reset $100;
rz(-pi/2) $100;
sx $100;
rz(-pi) $100;
c[2] = measure $93;
if (!c[2]) {
  rz(pi) $4;
}
reset $93;
rz(-pi/2) $93;
ecr $93, $87;
sx $87;
rz(-pi/2) $87;
rz(-pi/2) $93;
sx $93;
ecr $93, $87;
rz(-pi) $87;
sx $87;
rz(pi/2) $87;
rz(pi/2) $93;
sx $93;
ecr $93, $87;
rz(-pi) $87;
sx $87;
rz(-pi) $87;
c[4] = measure $75;
if (!c[4]) {
  rz(pi) $24;
}
rz(-pi/2) $24;
sx $24;
rz(-pi) $24;
reset $75;
c[6] = measure $96;
if (!c[6]) {
  rz(pi) $62;
}
rz(-pi/2) $62;
sx $62;
rz(-pi) $62;
reset $96;
rz(-pi) $96;
sx $96;
rz(-pi) $96;
c[8] = measure $73;
if (!c[8]) {
  rz(pi) $53;
}
sx $53;
rz(-pi/2) $53;
reset $73;
rz(-pi/2) $73;
c[10] = measure $59;
reset $59;
sx $59;
if (!c[10]) {
  rz(pi) $90;
}
c[12] = measure $80;
if (!c[12]) {
  rz(pi) $58;
}
rz(-pi/2) $58;
reset $80;
rz(-pi/2) $80;
ecr $80, $81;
rz(-pi/2) $80;
sx $80;
sx $81;
rz(-pi/2) $81;
ecr $80, $81;
rz(pi/2) $80;
sx $80;
rz(-pi) $81;
sx $81;
rz(pi/2) $81;
ecr $80, $81;
rz(-pi/2) $81;
sx $81;
rz(-pi) $81;
c[14] = measure $94;
if (!c[14]) {
  rz(pi) $44;
}
rz(-pi/2) $44;
sx $44;
rz(-pi) $44;
reset $94;
c[16] = measure $77;
if (!c[16]) {
  rz(pi) $12;
}
reset $77;
rz(-pi/2) $77;
sx $77;
c[18] = measure $65;
reset $65;
rz(-pi/2) $65;
if (!c[18]) {
  rz(pi) $83;
}
sx $83;
rz(-pi/2) $83;
c[20] = measure $92;
if (!c[20]) {
  rz(pi) $84;
}
rz(-pi/2) $84;
sx $84;
rz(-pi) $84;
ecr $84, $83;
sx $83;
rz(pi/2) $83;
rz(-pi) $84;
sx $84;
reset $92;
rz(-pi) $92;
sx $92;
rz(-pi) $92;
c[22] = measure $67;
reset $67;
rz(-pi/2) $67;
if (!c[22]) {
  rz(pi) $85;
}
rz(-pi/2) $85;
sx $85;
rz(-pi) $85;
ecr $85, $84;
rz(-pi/2) $84;
sx $84;
rz(pi/2) $84;
rz(pi/2) $85;
sx $85;
c[24] = measure $41;
reset $41;
rz(-pi/2) $41;
sx $41;
rz(-pi) $41;
ecr $41, $53;
rz(-pi) $41;
sx $41;
rz(-pi/2) $53;
sx $53;
if (!c[24]) {
  rz(pi) $117;
}
c[26] = measure $64;
reset $64;
rz(-pi) $64;
sx $64;
rz(-pi) $64;
ecr $65, $64;
sx $64;
x $65;
rz(-pi/2) $65;
if (!c[26]) {
  rz(pi) $125;
}
c[28] = measure $33;
reset $33;
sx $33;
if (!c[28]) {
  rz(pi) $71;
}
rz(-pi) $71;
sx $71;
rz(-pi) $71;
ecr $58, $71;
x $58;
rz(-pi/2) $58;
sx $71;
c[30] = measure $63;
if (!c[30]) {
  rz(pi) $16;
}
reset $63;
rz(-pi) $63;
sx $63;
rz(-pi) $63;
c[32] = measure $14;
reset $14;
if (!c[32]) {
  rz(pi) $20;
}
rz(-pi/2) $20;
ecr $20, $33;
rz(-pi/2) $20;
sx $20;
sx $33;
rz(-pi/2) $33;
ecr $20, $33;
rz(pi/2) $20;
sx $20;
rz(-pi) $33;
sx $33;
rz(pi/2) $33;
ecr $20, $33;
rz(-pi/2) $33;
sx $33;
rz(-pi) $33;
c[34] = measure $82;
if (!c[34]) {
  rz(pi) $45;
}
sx $45;
rz(-pi/2) $45;
ecr $44, $45;
rz(pi/2) $44;
sx $44;
rz(pi/2) $44;
sx $45;
reset $82;
sx $82;
rz(-pi/2) $82;
ecr $81, $82;
x $81;
rz(-pi/2) $81;
sx $82;
rz(pi/2) $82;
c[36] = measure $99;
if (!c[36]) {
  rz(pi) $66;
}
rz(-pi) $66;
sx $66;
rz(-pi) $66;
ecr $73, $66;
sx $66;
ecr $65, $66;
rz(-pi/2) $65;
sx $65;
sx $66;
rz(-pi/2) $66;
ecr $65, $66;
rz(pi/2) $65;
sx $65;
rz(-pi) $66;
sx $66;
rz(pi/2) $66;
ecr $65, $66;
rz(-pi) $66;
sx $66;
rz(-pi) $66;
ecr $67, $66;
x $67;
x $73;
reset $99;
rz(-pi) $99;
sx $99;
rz(-pi) $99;
c[38] = measure $56;
reset $56;
if (!c[38]) {
  rz(pi) $61;
}
sx $61;
rz(-pi/2) $61;
c[40] = measure $3;
reset $3;
if (!c[40]) {
  rz(pi) $86;
}
sx $86;
ecr $85, $86;
rz(-pi/2) $85;
sx $85;
sx $86;
rz(-pi/2) $86;
ecr $85, $86;
rz(pi/2) $85;
sx $85;
rz(-pi) $86;
sx $86;
rz(pi/2) $86;
ecr $85, $86;
rz(-pi/2) $86;
ecr $86, $87;
x $86;
c[42] = measure $97;
if (!c[42]) {
  rz(pi) $13;
}
reset $97;
rz(-pi/2) $97;
ecr $97, $96;
x $97;
rz(-pi/2) $97;
c[44] = measure $36;
reset $36;
if (!c[44]) {
  rz(pi) $72;
}
sx $72;
rz(-pi/2) $72;
ecr $62, $72;
x $62;
rz(-pi/2) $62;
ecr $62, $61;
rz(-pi) $61;
sx $61;
rz(pi/2) $61;
rz(pi/2) $62;
sx $62;
ecr $62, $61;
sx $61;
rz(-pi/2) $61;
rz(-pi/2) $62;
sx $62;
ecr $62, $61;
rz(-pi) $61;
sx $61;
rz(pi/2) $62;
sx $62;
ecr $62, $63;
x $62;
rz(-pi/2) $62;
rz(-pi/2) $63;
ecr $63, $64;
rz(-pi/2) $63;
sx $63;
sx $64;
rz(-pi/2) $64;
ecr $63, $64;
rz(pi/2) $63;
sx $63;
rz(-pi) $64;
sx $64;
rz(pi/2) $64;
ecr $63, $64;
sx $63;
rz(-pi/2) $63;
sx $64;
rz(-pi/2) $64;
ecr $54, $64;
rz(pi/2) $54;
sx $54;
rz(-pi) $64;
sx $64;
rz(pi/2) $64;
ecr $54, $64;
rz(-pi/2) $54;
sx $54;
sx $64;
rz(-pi/2) $64;
ecr $54, $64;
x $54;
rz(pi/2) $54;
ecr $54, $45;
rz(-pi) $45;
sx $45;
rz(pi/2) $45;
rz(pi/2) $54;
sx $54;
rz(pi/2) $54;
rz(pi/2) $64;
sx $64;
rz(pi/2) $64;
rz(-pi) $72;
sx $72;
rz(pi/2) $72;
ecr $62, $72;
rz(-pi/2) $62;
sx $62;
rz(-pi) $62;
ecr $62, $63;
rz(pi/2) $62;
sx $62;
rz(-pi) $63;
sx $63;
rz(pi/2) $63;
ecr $62, $63;
rz(-pi/2) $62;
sx $62;
sx $63;
rz(-pi/2) $63;
ecr $62, $63;
rz(pi/2) $62;
sx $62;
rz(pi/2) $63;
sx $63;
rz(pi/2) $63;
sx $72;
rz(-pi/2) $72;
ecr $81, $72;
rz(-pi) $72;
sx $72;
rz(pi/2) $72;
rz(pi/2) $81;
sx $81;
ecr $81, $72;
sx $72;
rz(-pi/2) $72;
rz(-pi/2) $81;
sx $81;
ecr $81, $72;
rz(pi/2) $72;
sx $72;
rz(pi/2) $72;
rz(pi/2) $81;
sx $81;
ecr $81, $82;
rz(-pi/2) $81;
sx $81;
sx $82;
rz(-pi/2) $82;
ecr $81, $82;
rz(pi/2) $81;
sx $81;
rz(-pi) $82;
sx $82;
rz(pi/2) $82;
ecr $81, $82;
rz(-pi/2) $82;
ecr $82, $83;
rz(-pi/2) $82;
sx $82;
sx $83;
rz(-pi/2) $83;
ecr $82, $83;
rz(pi/2) $82;
sx $82;
rz(-pi) $83;
sx $83;
rz(pi/2) $83;
ecr $82, $83;
rz(-pi/2) $83;
ecr $83, $92;
x $83;
rz(-pi/2) $92;
sx $92;
rz(-pi) $92;
c[46] = measure $68;
reset $68;
if (!c[46]) {
  rz(pi) $91;
}
sx $91;
rz(-pi/2) $91;
c[48] = measure $110;
if (!c[48]) {
  rz(pi) $8;
}
reset $110;
sx $110;
rz(-pi/2) $110;
ecr $100, $110;
rz(pi/2) $100;
sx $100;
ecr $100, $99;
rz(-pi/2) $99;
ecr $99, $98;
sx $98;
rz(-pi/2) $98;
rz(-pi/2) $99;
sx $99;
ecr $99, $98;
rz(-pi) $98;
sx $98;
rz(pi/2) $98;
rz(pi/2) $99;
sx $99;
ecr $99, $98;
rz(-pi/2) $98;
sx $98;
ecr $98, $91;
rz(-pi) $91;
sx $91;
rz(pi/2) $91;
rz(pi/2) $98;
sx $98;
ecr $98, $91;
sx $91;
rz(-pi/2) $91;
rz(-pi/2) $98;
sx $98;
ecr $98, $91;
x $91;
rz(-pi/2) $91;
sx $98;
rz(pi/2) $98;
ecr $97, $98;
x $97;
rz(-pi/2) $98;
rz(-pi) $100;
sx $100;
rz(pi/2) $100;
ecr $101, $100;
rz(-pi) $100;
sx $100;
rz(pi/2) $100;
rz(pi/2) $101;
sx $101;
ecr $101, $100;
sx $100;
rz(-pi/2) $100;
rz(-pi/2) $101;
sx $101;
ecr $101, $100;
rz(pi/2) $100;
sx $100;
rz(pi/2) $100;
rz(pi/2) $101;
sx $101;
rz(-pi/2) $110;
sx $110;
rz(pi/2) $110;
c[50] = measure $49;
reset $49;
if (!c[50]) {
  rz(pi) $105;
}
c[52] = measure $118;
if (!c[52]) {
  rz(pi) $32;
}
reset $118;
c[54] = measure $116;
if (!c[54]) {
  rz(pi) $79;
}
rz(-pi/2) $79;
ecr $79, $78;
sx $78;
rz(-pi) $79;
sx $79;
rz(pi/2) $79;
ecr $91, $79;
rz(-pi) $79;
sx $79;
rz(pi/2) $79;
rz(pi/2) $91;
sx $91;
ecr $91, $79;
sx $79;
rz(-pi/2) $79;
rz(-pi/2) $91;
sx $91;
ecr $91, $79;
rz(pi/2) $79;
sx $79;
ecr $79, $78;
sx $78;
rz(-pi/2) $78;
rz(-pi/2) $79;
sx $79;
ecr $79, $78;
rz(-pi) $78;
sx $78;
rz(pi/2) $78;
rz(pi/2) $79;
sx $79;
ecr $79, $78;
sx $78;
rz(-pi/2) $78;
ecr $77, $78;
rz(pi/2) $77;
sx $77;
rz(-pi) $78;
sx $78;
rz(pi/2) $78;
ecr $77, $78;
rz(-pi/2) $77;
sx $77;
sx $78;
rz(-pi/2) $78;
ecr $77, $78;
rz(pi/2) $77;
sx $77;
ecr $77, $71;
sx $71;
rz(-pi/2) $71;
rz(-pi/2) $77;
sx $77;
ecr $77, $71;
rz(-pi) $71;
sx $71;
rz(pi/2) $71;
rz(pi/2) $77;
sx $77;
ecr $77, $71;
rz(-pi) $71;
sx $71;
rz(-pi) $71;
ecr $58, $71;
x $58;
rz(-pi/2) $58;
ecr $58, $59;
rz(-pi/2) $58;
sx $58;
sx $59;
rz(-pi/2) $59;
ecr $58, $59;
rz(pi/2) $58;
sx $58;
rz(-pi) $59;
sx $59;
rz(pi/2) $59;
ecr $58, $59;
rz(-pi/2) $58;
rz(-pi/2) $59;
ecr $59, $60;
rz(-pi/2) $59;
sx $59;
sx $60;
rz(-pi/2) $60;
ecr $59, $60;
rz(pi/2) $59;
sx $59;
rz(-pi) $60;
sx $60;
rz(pi/2) $60;
ecr $59, $60;
sx $60;
ecr $53, $60;
rz(-pi/2) $53;
sx $53;
sx $60;
rz(-pi/2) $60;
ecr $53, $60;
rz(pi/2) $53;
sx $53;
rz(-pi) $60;
sx $60;
rz(pi/2) $60;
ecr $53, $60;
rz(-pi) $53;
sx $53;
rz(-pi) $53;
rz(-pi/2) $60;
sx $60;
rz(-pi) $60;
ecr $60, $61;
rz(pi/2) $60;
sx $60;
rz(pi/2) $60;
rz(-pi) $61;
sx $61;
rz(pi/2) $61;
ecr $62, $61;
x $62;
rz(-pi) $71;
sx $71;
rz(-pi) $71;
ecr $58, $71;
x $58;
rz(pi/2) $78;
sx $78;
rz(pi/2) $78;
sx $91;
rz(pi/2) $91;
ecr $98, $91;
x $98;
reset $116;
c[56] = measure $34;
reset $34;
sx $34;
rz(-pi/2) $34;
ecr $24, $34;
rz(pi/2) $24;
sx $24;
rz(pi/2) $24;
rz(-pi/2) $34;
sx $34;
rz(pi/2) $34;
if (!c[56]) {
  rz(pi) $46;
}
rz(-pi/2) $46;
ecr $46, $45;
x $46;
c[58] = measure $126;
if (!c[58]) {
  rz(pi) $102;
}
sx $102;
ecr $101, $102;
rz(-pi/2) $101;
sx $101;
sx $102;
rz(-pi/2) $102;
ecr $101, $102;
rz(pi/2) $101;
sx $101;
rz(-pi) $102;
sx $102;
rz(pi/2) $102;
ecr $101, $102;
rz(-pi/2) $101;
sx $102;
rz(-pi/2) $102;
ecr $92, $102;
rz(pi/2) $92;
sx $92;
rz(pi/2) $92;
rz(-pi) $102;
sx $102;
rz(pi/2) $102;
ecr $101, $102;
x $101;
reset $126;
c[60] = measure $76;
reset $76;
if (!c[60]) {
  rz(pi) $121;
}
c[62] = measure $124;
if (!c[62]) {
  rz(pi) $40;
}
rz(-pi/2) $40;
sx $40;
rz(-pi) $40;
ecr $40, $41;
rz(pi/2) $40;
sx $40;
ecr $40, $39;
sx $39;
rz(-pi/2) $39;
rz(-pi/2) $40;
sx $40;
ecr $40, $39;
rz(-pi) $39;
sx $39;
rz(pi/2) $39;
rz(pi/2) $40;
sx $40;
ecr $40, $39;
sx $39;
rz(-pi/2) $39;
ecr $33, $39;
rz(pi/2) $33;
sx $33;
rz(pi/2) $33;
rz(-pi/2) $39;
sx $39;
rz(pi/2) $39;
rz(-pi/2) $41;
sx $41;
ecr $41, $53;
x $41;
reset $124;
barrier $102, $79, $87, $4, $75, $24, $96, $61, $73, $60, $58, $90, $72, $53, $94, $44, $78, $12, $66, $82, $92, $84, $67, $86, $41, $117, $62, $125, $20, $77, $54, $16, $14, $33, $81, $45, $71, $65, $56, $63, $3, $85, $97, $13, $36, $83, $68, $98, $110, $8, $49, $105, $118, $32, $116, $91, $34, $46, $126, $101, $76, $121, $124, $39;
meas[0] = measure $102;
meas[1] = measure $79;
meas[2] = measure $87;
meas[3] = measure $4;
meas[4] = measure $75;
meas[5] = measure $24;
meas[6] = measure $96;
meas[7] = measure $61;
meas[8] = measure $73;
meas[9] = measure $60;
meas[10] = measure $58;
meas[11] = measure $90;
meas[12] = measure $72;
meas[13] = measure $53;
meas[14] = measure $94;
meas[15] = measure $44;
meas[16] = measure $78;
meas[17] = measure $12;
meas[18] = measure $66;
meas[19] = measure $82;
meas[20] = measure $92;
meas[21] = measure $84;
meas[22] = measure $67;
meas[23] = measure $86;
meas[24] = measure $41;
meas[25] = measure $117;
meas[26] = measure $62;
meas[27] = measure $125;
meas[28] = measure $20;
meas[29] = measure $77;
meas[30] = measure $54;
meas[31] = measure $16;
meas[32] = measure $14;
meas[33] = measure $33;
meas[34] = measure $81;
meas[35] = measure $45;
meas[36] = measure $71;
meas[37] = measure $65;
meas[38] = measure $56;
meas[39] = measure $63;
meas[40] = measure $3;
meas[41] = measure $85;
meas[42] = measure $97;
meas[43] = measure $13;
meas[44] = measure $36;
meas[45] = measure $83;
meas[46] = measure $68;
meas[47] = measure $98;
meas[48] = measure $110;
meas[49] = measure $8;
meas[50] = measure $49;
meas[51] = measure $105;
meas[52] = measure $118;
meas[53] = measure $32;
meas[54] = measure $116;
meas[55] = measure $91;
meas[56] = measure $34;
meas[57] = measure $46;
meas[58] = measure $126;
meas[59] = measure $101;
meas[60] = measure $76;
meas[61] = measure $121;
meas[62] = measure $124;
meas[63] = measure $39;

"""
circuit = qiskit.qasm3.loads(qasm)
# draw circuit and save to `test.svg` in current dir
circuit.draw("mpl", filename="64q.svg")
